install.packages("palmerpenguins")
###Analysis of Variance###
#A method to determine whether or not three or more group of populations are different
#This method is very popular in the experimental data analysis since the model accomodate the experiment data type and
#the goals.
#to illustrate it, lets use the palmer penguin dataset from library palmer penguin
library(palmerpenguins)
data('palmerpenguins')
data(palmerpenguins)
data(package = 'palmerpenguins')
data("penguins")
View(penguins)
#then we can try grouping the data based on the spesies of penguin
library(tidyverse)
penguins %>%
count(species)
penguins %>%
group_by(species) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
#Plot one of the variable into scatterplot
library(ggplot2)
ggplot2::theme_set(ggplot2::theme_minimal())
mass_flipper = ggplot(data = penguins,
aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species,
shape = species),
size = 3,
alpha = 0.8) +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(title = "Penguin size, Palmer Station LTER",
subtitle = "Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins",
x = "Flipper length (mm)",
y = "Body mass (g)",
color = "Penguin species",
shape = "Penguin species") +
theme(legend.position = c(0.2, 0.7),
plot.title.position = "plot",
plot.caption = element_text(hjust = 0, face= "italic"),
plot.caption.position = "plot")
mass_flipper
#Plot one of the variable into histogram
flipper_hist = ggplot(data = penguins, aes(x = flipper_length_mm)) +
geom_histogram(aes(fill = species),
alpha = 0.5,
position = "identity") +
scale_fill_manual(values = c("darkorange","purple","cyan4")) +
labs(x = "Flipper length (mm)",
y = "Frequency",
title = "Penguin flipper lengths")
flipper_hist
#Now we prepare the data for ANOVA
dat = penguins %>%
select(species, flipper_length_mm)
View(dat)
summary(dat)
dat = dat[c(1:50,153:202,221:270),]
summary(dat)
#Now we prepare the data for ANOVA
dat = penguins %>%
select(species, flipper_length_mm)
summary(dat)#we'll only keep 50 observations for each spesies
dat = dat[c(1:50,153:202,221:270),]
summary(dat)
dat1 = dat[dat$species == 'Adelie']
dat1 = dat[dat$species == 'Adelie',]
View(dat1)
#Now we prepare the data for ANOVA
dat = penguins %>%
select(species, flipper_length_mm)
summary(dat)#we'll only keep 50 observations for each spesies
dat1 = dat[dat$species == 'Adelie',]
dat2 = dat[dat$species == 'Chinstrap',]
dat3 = dat[dat$species == 'Gentoo',]
dat = rbind(dat1[1:50,], dat2[1:50,], dat3[1:50,])
summary(dat)
#Now we prepare the data for ANOVA
dat = penguins %>%
select(species, flipper_length_mm)
summary(dat)#we'll only keep 50 observations for each spesies
na.omit(dat)
dat = na.omit(dat)
#Now we prepare the data for ANOVA
dat = penguins %>%
select(species, flipper_length_mm)
summary(dat)#we'll only keep 50 observations for each spesies and remove na
dat = na.omit(dat)
#Now we prepare the data for ANOVA
dat = penguins %>%
select(species, flipper_length_mm)
dat = na.omit(dat)
summary(dat)#we'll only keep 50 observations for each spesies
dat1 = dat[dat$species == 'Adelie',]
dat2 = dat[dat$species == 'Chinstrap',]
dat3 = dat[dat$species == 'Gentoo',]
dat = rbind(dat1[1:50,], dat2[1:50,], dat3[1:50,])
summary(dat)
ggplot(dat) +
aes(x = species, y = flipper_length_mm, color = species) +
geom_jitter() +
theme(legend.position = "none")
res_aov = aov(flipper_length_mm ~ species,
data = dat)
par(mfrow = c(1, 2))
# histogram
hist(res_aov$residuals)
# QQ-plot
library(car)
qqPlot(res_aov$residuals, id = FALSE)
#Shapiro-Wilk
shapiro.test(res_aov$residuals)
#Homogeneity of Vairance
# Boxplot
boxplot(flipper_length_mm ~ species,data = dat)
dotplot(flipper_length_mm ~ species,data = dat)
# Dotplot
library("lattice")
dotplot(flipper_length_mm ~ species,data = dat)
#Normality
par(mfrow = c(1, 2))
#Homogeneity of Vairance
# Boxplot
boxplot(flipper_length_mm ~ species,data = dat)
dotplot(flipper_length_mm ~ species,data = dat)
#Normality
par(mfrow = c(1, 1))
#Homogeneity of Vairance
# Boxplot
boxplot(flipper_length_mm ~ species,data = dat)
# Levene's test
library(car)
leveneTest(flipper_length_mm ~ species, data = dat)
#Outlier
boxplot(flipper_length_mm ~ species, data = dat)
#ANOVA
summary(res_aov)
#Plot one of the variable into histogram
library(ggplot2)
flipper_hist
View(dat)
View(penguins_raw)
View(penguins)
#Take an example from youtube videos of Ethan Chlebowsky: "Are San Marzano Tomatoes actually worth it?"
#In this example, let's note that Ethan is trying to judge the "taste" of canned tomatoes which
#while obviously very subjective, he tried to prevent such subjectivity.
#This can be noted on the taste test #1 and #2 where he tried the tomatoes while "blinding" himself.
#This example should give you a good idea on how "blocking" works and the aim for doing such seemingly
#"common" thing in this occasion.
#The truth is, blocking in design experimental study is as simple as blinding oneself in such taste test.
#We are trying to prevent "unwanted" effects to affect our study.
#The mathematical model for blocking is just as simple as adding another factor, which is considered as
#the "blocking" factor.
rm(list = ls())
#Lets try applying blocking in our one way ANOVA.
#Using the previous palmer penguin data
library(palmerpenguins)
data(package = 'palmerpenguins')
data("penguins")
#The observation that has been conducted to get this "penguins" data is done in several islands
#Assume that geographical location may affect the physiological of these penguins
penguins %>%
group_by(island) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
#The observation that has been conducted to get this "penguins" data is done in several islands
#Assume that geographical location may affect the physiological of these penguins
library(dplyr)
penguins %>%
group_by(island) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
#As it can be seen from grouping above, the mean size of penguins in Biscoe island does seem to be different
#compared to the other 2 islands. While this may also be affected by the species that mostly live in the
#corresponding island, a skeptical approach should always be applied.
table(penguins[,1:2])
#As it can be seen from grouping above, the mean size of penguins in Biscoe island does seem to be different
#compared to the other 2 islands. While this may also be affected by the species that mostly live in the
#corresponding island, a skeptical approach should always be applied.
#Lets use island asour block for ANOVA in penguins data, we'll use bill_depth as the response variable
blk_aov = aov(bill_depth_mm~species+island, data = penguins)
summary(blk_aov)
#Lets compare the above ANOVA table and one way ANOVA table that only consider species as the single factor
aov1 = aov(bill_depth_mm~species, data = penguins)
summary(aov1)
###Latin square###
#A more specific case of blocking is known as "latin square".
#This concept of blocking can be imagined as "2 dimensional blocking", that is we do 2 layer of blocking.
#The oldest application can be found in agriculture where the researcher trying to block the effect of
#"row" and "collumn" of the field.
#The rule in which the seed be planted in this segmented field is similar to the game of sudoku (one type
#can only exist once for each collumn and row).
#The rule in which latin square is designed is also widely used as scheduling method in many sports event
#Lets try to apply latin square in the following sample data
rows = c(rep("r1",1), rep("r2",1), rep("r3",1), rep("r4",1), rep("r5",1))
cols = c(rep("cA",5), rep("cB",5), rep("cC",5), rep("cD",5), rep("cE",5))
treatments = c("A","C","D","E","B", "D","B","C","A","E", "E","A","B","C","D", "B","E","A","D","C", "C","D","E","B","A")
matrix(y$treatments, 5,5)
yield = c(7.4,11.8,10.1,8.8,11.8,8.9,6.5,17.9,10.1,8.8,5.8,8.7,9.0,15.7,14.3,12.0,7.6,8.5,11.1,18.4,14.3,7.9,7.1,7.4,10.1)
y = data.frame(cols,rows,treatments, yield)
plot(yield ~ rows+cols+treatments,y)
par(mfrow = c(2,2))
plot(yield ~ rows+cols+treatments,y)
View(y)
plot(yield ~ rows+cols+treatments,data = y)
par(mfrow = c(1,1))
ltn_aov = aov(yield ~ cols+rows+treatments, data = y)
summary(ltn_aov)
matrix(y$treatments, 5,5)
#on top of latin square where the two latin squares are mutually orthogonal.
#To give a more approachable example, take an example of the following situation:
#a car company is trying to reduce their total cost of maintenance by making sure that they provide
#a more efficient maintenance for the tires of their cars. To study the effect of tires rotation,
#the company observed from 4 different location based on the general weather characteristics (which translates
#into type of tires). The manufacturer also needs to ensure the maintanance can be applied for all the model
#of their released car. Lastly, the manufacturer also want to provide the best possible service without
#additional cost, that is by comparing the tire brand.
#If there is no significant difference in thread wears between the front and rear tires within the 10,000 miles,
#then the tire manufacturer can claim that their tires do not need to be rotated before 10,000 miles.
wthr = c(rep("1",1), rep("2",1), rep("3",1), rep("4",1))
mdl = c(rep("A",5), rep("B",5), rep("C",5), rep("D",5))
install.packages("agricolae")
#on top of latin square where the two latin squares are mutually orthogonal.
#To give a more approachable example, take an example of the following situation:
#a car company is trying to reduce their total cost of maintenance by making sure that they provide
#a more efficient maintenance for the tires of their cars. To study the effect of tires rotation,
#the company observed from 4 different location based on the general weather characteristics (which translates
#into type of tires). The manufacturer also needs to ensure the maintanance can be applied for all the model
#of their released car. Lastly, the manufacturer also want to provide the best possible service without
#additional cost, that is by comparing the tire brand.
#If there is no significant difference in thread wears between the front and rear tires within the 10,000 miles,
#then the tire manufacturer can claim that their tires do not need to be rotated before 10,000 miles.
library(agricolae)
wthr = c(rep("1",1), rep("2",1), rep("3",1), rep("4",1))
mdl = c(rep("A",5), rep("B",5), rep("C",5), rep("D",5))
grec_design = design.graeco(wthr, mdl, seed = 19)
grec_design$sketch
grec_design$book
tire = c(16, 16, 25, 18, 23, 15, 5, 25, 20, 24, 17, 16, 15, 19, 26, 15)
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
wthr = c(rep("1",1), rep("2",1), rep("3",1), rep("4",1))
mdl = c(rep("A",5), rep("B",5), rep("C",5), rep("D",5))
grec_design = design.graeco(wthr, mdl, seed = 0)
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
grec_design$
tire = data.frame(cbind(grec_design$book, tire))
grec_design$sketch
wthr = c(rep("1",1), rep("2",1), rep("3",1), rep("4",1))
mdl = c(rep("A",1), rep("B",1), rep("C",1), rep("D",1))
tire = c(16, 16, 25, 18, 23, 15, 5, 25, 20, 24, 17, 16, 15, 19, 26, 15)
grec_design = design.graeco(wthr, mdl, seed = 0)
grec_design$sketch
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
grec_design = design.graeco(wthr, mdl, seed = 11)
grec_design$sketch
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
wthr = c(rep("1",1), rep("2",1), rep("3",1), rep("4",1))
mdl = c(rep("A",1), rep("B",1), rep("C",1), rep("D",1))
tire = c(6, 16, 25, 18, 23, 15, 5, 25, 20, 24, 17, 16, 15, 19, 26, 15)
grec_design = design.graeco(wthr, mdl, seed = 11)
grec_design$sketch
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
wthr = c(rep("1",1), rep("2",1), rep("3",1), rep("4",1))
mdl = c(rep("A",1), rep("B",1), rep("C",1), rep("D",1))
tire = c(6, 16, 25, 18, 23, 15, 5, 25, 20, 24, 17, 16, 15, 19, 26, 5)
grec_design = design.graeco(wthr, mdl, seed = 11)
grec_design$sketch
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
wthr = c(rep("1",1), rep("2",1), rep("3",1), rep("4",1))
mdl = c(rep("A",1), rep("B",1), rep("C",1), rep("D",1))
tire = c(6, 16, 21, 18, 23, 15, 5, 25, 20, 24, 17, 16, 15, 19, 26, 15)
grec_design = design.graeco(wthr, mdl, seed = 11)
grec_design$sketch
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
pst = c(rep("1",1), rep("2",1), rep("3",1), rep("4",1))
brnd = c(rep("A",1), rep("B",1), rep("C",1), rep("D",1))
tire = c(6, 16, 29, 18, 23, 15, 5, 25, 20, 24, 17, 16, 15, 19, 26, 15)
grec_design = design.graeco(wthr, mdl, seed = 11)
grec_design$sketch
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
tire = c(6, 16, 29, 18, 23, 15, 5, 25, 20, 24, 7, 16, 15, 19, 26, 15)
grec_design = design.graeco(wthr, mdl, seed = 11)
grec_design$sketch
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
#on top of latin square where the two latin squares are mutually orthogonal.
#To give a more approachable example, take an example of the following situation:
#a car company is trying to reduce their total cost of maintenance by making sure that they provide
#a more efficient maintenance for the tires of their cars. To study the effect of tires rotation,
#the company observed from 4 different location based on the general weather characteristics (which translates
#into type of tires). The manufacturer also needs to ensure the maintanance can be applied for all the model
#of their released car. Lastly, the manufacturer also want to provide the best possible service without
#additional cost, that is by comparing the tire brand.
#If there is no significant difference in thread wears between the front and rear tires within the 10,000 miles,
#then the tire manufacturer can claim that their tires do not need to be rotated before 10,000 miles.
rm(list = ls())
pst = c(rep("1",1), rep("2",1), rep("3",1), rep("4",1))
brnd = c(rep("A",1), rep("B",1), rep("C",1), rep("D",1))
tire = c(6, 16, 29, 18, 23, 15, 5, 25, 20, 24, 7, 16, 15, 19, 26, 15)
grec_design = design.graeco(wthr, mdl, seed = 11)
grec_design = design.graeco(pst, brnd, seed = 11)
grec_design$sketch
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+wthr+mdl, data = tire)
summary(grec_aov)
grec_aov = aov(tire~row+col+pst+brnd, data = tire)
summary(grec_aov)
tire = c(6, 16, 29, 18, 23, 15, 5, 25, 20, 4, 7, 16, 15, 19, 26, 15)
grec_design = design.graeco(pst, brnd, seed = 11)
grec_design$sketch
tire = data.frame(cbind(grec_design$book, tire))
grec_aov = aov(tire~row+col+pst+brnd, data = tire)
summary(grec_aov)
###Two way ANOVA###
#ANOVA in which we actually consider 2nd factor to be variable experiment (not something that only helps
#in the analysis like the block factor).
#Lets go back  to the previous penguins data
library(palmerpenguins)
data("penguins")
View(penguins)
penguins %>%
group_by(sex) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
na.omit(penguins) %>%
group_by(sex) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
#A clear difference between male and female body mass
#A two way ANOVA will do analysis of whether species and sex of the penguins affect their body mass.
tw_aov = aov(body_mass_g ~ species + sex, data = penguins)
summary(tw_aov)
#Interaction between factors are sometimes also within interest. This interaction term is interpreted as
#combination/composite effect between factors
tw_aov2 = aov(body_mass_g ~ species * sex, data = penguins)
summary(tw_aov2)
#Now lets compute each type of SS in the case of the previous two way ANOVA for the penguins data
#Type I SS
anova(lm(body_mass_g ~ species * sex, data = penguins))
anova(lm(body_mass_g ~ sex * species, data = penguins))
#Type III SS
options(contrasts = c(“contr.sum”,”contr.poly”))
#Type III SS
model3 = lm(body_mass_g ~ species * sex, data = penguins)
drop1(model3, .~., test=”F”)
options(contrasts = c(“contr.sum”,”contr.poly”))
options(contrasts = “contr.sum”)
#Type III SS
rm(model3)
#Type III SS
library(car)
Anova(lm(body_mass_g ~ species * sex, data = penguins, contrasts=list(topic=contr.sum, sys=contr.sum)), type=3))
Anova(lm(body_mass_g ~ species * sex, data = penguins, contrasts=list(topic=contr.sum, sys=contr.sum)), type="III"))
Anova(lm(body_mass_g ~ species * sex, data = penguins, contrasts=list(IV=contr.poly)), type="III")
Anova(lm(body_mass_g ~ species * sex, data = penguins, contrasts=list(species=contr.sum, sex = contr.sum)), type="III")
##Response Plot##
library(ggpubr)
penguins = na.omit(penguins)
ggline(penguins, x = "species", y = "body_mass_g", color = "sex",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800"))
ggline(penguins, x = "species", y = "body_mass_g", color = "sex",
add = c("mean_se", "dotplot"))
ggline(penguins, x = "species", y = "body_mass_g", color = "sex",
add = c("mean_se"))
#Interaction plot
interaction.plot(x.factor = penguins$species, trace.factor = penguins$sex,
response = penguins$body_mass_g, fun = mean,
type = "b", legend = TRUE,
xlab = "Species", ylab="Body Mass (g)",
pch=c(1,19), col = c("#00AFBB", "#E7B800"))
#Plot one of the variable into histogram
library(ggplot2)
flipper_hist = ggplot(data = penguins, aes(x = flipper_length_mm)) +
geom_histogram(aes(fill = species),
alpha = 0.5,
position = "identity") +
scale_fill_manual(values = c("darkorange","purple","cyan4")) +
labs(x = "Flipper length (mm)",
y = "Frequency",
title = "Penguin flipper lengths")
flipper_hist
penguins %>%
group_by(island) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
#As it can be seen from grouping above, the mean size of penguins in Biscoe island does seem to be different
#compared to the other 2 islands. While this may also be affected by the species that mostly live in the
#corresponding island, a skeptical approach should always be applied.
#Lets use island as our block for ANOVA in penguins data, we'll use bill_depth as the response variable
blk_aov = aov(bill_depth_mm~species+island, data = penguins)
summary(blk_aov)
#Lets compare the above ANOVA table and one way ANOVA table that only consider species as the single factor
aov1 = aov(bill_depth_mm~species, data = penguins)
summary(aov1)
###Latin square###
#A more specific case of blocking is known as "latin square".
#This concept of blocking can be imagined as "2 dimensional blocking", that is we do 2 layer of blocking.
#The oldest application can be found in agriculture where the researcher trying to block the effect of
#"row" and "collumn" of the field.
#The rule in which the seed be planted in this segmented field is similar to the game of sudoku (one type
#can only exist once for each collumn and row).
#The rule in which latin square is designed is also widely used as scheduling method in many sports event
#Lets try to apply latin square in the following sample data
rows = c(rep("r1",1), rep("r2",1), rep("r3",1), rep("r4",1), rep("r5",1))
cols = c(rep("cA",5), rep("cB",5), rep("cC",5), rep("cD",5), rep("cE",5))
treatments = c("A","C","D","E","B", "D","B","C","A","E", "E","A","B","C","D", "B","E","A","D","C", "C","D","E","B","A")
yield = c(7.4,11.8,10.1,8.8,11.8,8.9,6.5,17.9,10.1,8.8,5.8,8.7,9.0,15.7,14.3,12.0,7.6,8.5,11.1,18.4,14.3,7.9,7.1,7.4,10.1)
y = data.frame(cols,rows,treatments, yield)
matrix(y$treatments, 5,5)#The latin square
grec_design$sketch
ggline(penguins, x = "species", y = "body_mass_g", color = "sex",
add = c("mean_se"))
#Interaction plot
interaction.plot(x.factor = penguins$species, trace.factor = penguins$sex,
response = penguins$body_mass_g, fun = mean,
type = "b", legend = TRUE,
xlab = "Species", ylab="Body Mass (g)",
pch=c(1,19), col = c("#00AFBB", "#E7B800"))
